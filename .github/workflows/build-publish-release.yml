name: build-publish-release
on:
  push
jobs:
  build:
    name: Build distribution package.
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Install Python.
      uses: actions/setup-python@v5
      with:
        python-version: 3.11
        architecture: x64
    - name: Install pypa/build.
      run: python -m pip install .[publish]
    - name: Build a source tarball and a binary wheel.
      run: python -m build --sdist --wheel .
    - name: Store the distribution packages.
      uses: actions/upload-artifact@v4
      with:
        name: python-package-distributions
        path: dist/

  publish:
    name: Publish distribution package to PyPI.
    if: startsWith(github.ref, 'refs/tags/') # Publish on tag pushes.
    needs:
    - build
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/parts
    permissions:
      id-token: write
    steps:
    - name: Download all the package distributions.
      uses: actions/download-artifact@v4
      with:
        name: python-package-distributions
        path: dist/
    - name: Publish distribution package to PyPI.
      uses: pypa/gh-action-pypi-publish@release/v1

  release:
    name: Sign distribution package with Sigstore and upload it as a GitHub release.
    needs:
    - publish
    runs-on: ubuntu-latest
    permissions:
      contents: write # For GitHub.
      id-token: write # For Sigstore.
    steps:
    - name: Download all the package distributions.
      uses: actions/download-artifact@v4
      with:
        name: python-package-distributions
        path: dist/
    - name: Sign the package distributions with Sigstore.
      uses: sigstore/gh-action-sigstore-python@v2.1.1
      with:
        inputs: >-
          ./dist/*.tar.gz
          ./dist/*.whl
    - name: Create GitHub release.
      env:
        GITHUB_TOKEN: ${{ github.token }}
      run: gh release create '${{ github.ref_name }}' --repo '${{ github.repository }}'
    - name: Upload package distributions and signatures/certificates as a GitHub release.
      env:
        GITHUB_TOKEN: ${{ github.token }}
      run: >-
        gh release upload
        '${{ github.ref_name }}' dist/**
        --repo '${{ github.repository }}'
